STARTTING
euclidean
Fold accuracy result comparison for k=1, distance = euclidean and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.992          0.992       7.379   0.048     [ 3.  2.  9. ...,  9.  1.  7.]  //  [3 2 9 ..., 9 1 7]   //  [3 2 9 ..., 9 1 7]
0.994          0.994       7.305   0.048     [ 3.  7.  8. ...,  1.  1.  6.]  //  [3 7 8 ..., 1 1 6]   //  [3 7 8 ..., 1 1 6]
0.995          0.995       7.416   0.048     [ 8.  8.  7. ...,  7.  9.  3.]  //  [8 8 7 ..., 7 9 3]   //  [8 8 7 ..., 7 9 3]
0.993          0.993       7.404   0.052     [ 3.  3.  2. ...,  5.  9.  2.]  //  [3 3 2 ..., 5 9 2]   //  [3 3 2 ..., 5 9 2]
0.995          0.995       7.176   0.048     [ 7.  3.  1. ...,  0.  7.  8.]  //  [7 3 1 ..., 0 7 8]   //  [7 3 1 ..., 0 7 8]
0.993          0.993       7.372   0.050     [ 4.  2.  9. ...,  9.  8.  0.]  //  [4 2 9 ..., 9 8 0]   //  [4 2 9 ..., 9 8 0]
0.995          0.995       7.665   0.060     [ 6.  3.  0. ...,  6.  8.  3.]  //  [6 3 0 ..., 6 8 3]   //  [6 3 0 ..., 6 8 3]
0.990          0.990       7.479   0.049     [ 9.  7.  6. ...,  2.  8.  9.]  //  [9 7 6 ..., 2 8 9]   //  [9 7 6 ..., 2 8 9]
0.993          0.993       7.560   0.045     [ 5.  5.  8. ...,  5.  2.  3.]  //  [5 5 8 ..., 5 2 3]   //  [5 5 8 ..., 5 2 3]
0.995          0.995       7.134   0.054     [ 1.  5.  2. ...,  5.  0.  3.]  //  [1 5 2 ..., 5 0 3]   //  [1 5 2 ..., 5 0 3]
Average accuracy kNNAlgorithm 0.993  SKlearn Knn 0.993 
Fold accuracy result comparison for k=3, distance = euclidean and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.995          0.995       6.902   0.059     [ 3.  2.  9. ...,  9.  1.  7.]  //  [3 2 9 ..., 9 1 7]   //  [3 2 9 ..., 9 1 7]
0.991          0.991       7.024   0.061     [ 3.  7.  8. ...,  1.  1.  6.]  //  [3 7 8 ..., 1 1 6]   //  [3 7 8 ..., 1 1 6]
0.995          0.995       7.353   0.060     [ 8.  8.  7. ...,  7.  9.  3.]  //  [8 8 7 ..., 7 9 3]   //  [8 8 7 ..., 7 9 3]
0.990          0.990       7.098   0.064     [ 3.  3.  2. ...,  5.  9.  2.]  //  [3 3 2 ..., 5 9 2]   //  [3 3 2 ..., 5 9 2]
0.994          0.994       7.337   0.062     [ 7.  3.  1. ...,  0.  7.  8.]  //  [7 3 1 ..., 0 7 8]   //  [7 3 1 ..., 0 7 8]
0.995          0.995       7.603   0.062     [ 4.  2.  9. ...,  9.  8.  0.]  //  [4 2 9 ..., 9 8 0]   //  [4 2 9 ..., 9 8 0]
0.995          0.994       7.306   0.059     [ 6.  3.  0. ...,  6.  8.  3.]  //  [6 3 0 ..., 6 8 3]   //  [6 3 0 ..., 6 8 3]
0.992          0.992       7.673   0.071     [ 9.  7.  6. ...,  2.  8.  9.]  //  [9 7 6 ..., 2 8 9]   //  [9 7 6 ..., 2 8 9]
0.995          0.995       7.343   0.068     [ 5.  5.  8. ...,  5.  2.  3.]  //  [5 5 8 ..., 5 2 3]   //  [5 5 8 ..., 5 2 3]
0.993          0.992       7.498   0.072     [ 1.  5.  2. ...,  5.  0.  3.]  //  [1 5 2 ..., 5 0 3]   //  [1 5 2 ..., 5 0 3]
Average accuracy kNNAlgorithm 0.993  SKlearn Knn 0.993 
Fold accuracy result comparison for k=5, distance = euclidean and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.995          0.995       6.686   0.083     [ 3.  2.  9. ...,  9.  1.  7.]  //  [3 2 9 ..., 9 1 7]   //  [3 2 9 ..., 9 1 7]
0.990          0.990       7.231   0.063     [ 3.  7.  8. ...,  1.  1.  6.]  //  [3 7 8 ..., 1 1 6]   //  [3 7 8 ..., 1 1 6]
0.992          0.992       7.378   0.068     [ 8.  8.  7. ...,  7.  9.  3.]  //  [8 8 7 ..., 7 9 3]   //  [8 8 7 ..., 7 9 3]
0.991          0.991       7.658   0.092     [ 3.  3.  2. ...,  5.  9.  2.]  //  [3 3 2 ..., 5 9 2]   //  [3 3 2 ..., 5 9 2]
0.993          0.993       7.351   0.063     [ 7.  3.  1. ...,  0.  7.  8.]  //  [7 3 1 ..., 0 7 8]   //  [7 3 1 ..., 0 7 8]
0.995          0.995       6.554   0.068     [ 4.  2.  9. ...,  9.  8.  0.]  //  [4 2 9 ..., 9 8 0]   //  [4 2 9 ..., 9 8 0]
0.993          0.993       6.718   0.060     [ 6.  3.  0. ...,  6.  8.  3.]  //  [6 3 0 ..., 6 8 3]   //  [6 3 0 ..., 6 8 3]
0.994          0.993       6.552   0.061     [ 9.  7.  6. ...,  2.  8.  9.]  //  [9 7 6 ..., 2 8 9]   //  [9 7 6 ..., 2 8 9]
0.993          0.993       6.542   0.065     [ 5.  5.  8. ...,  5.  2.  3.]  //  [5 5 8 ..., 5 2 3]   //  [5 5 8 ..., 5 2 3]
0.990          0.990       6.506   0.062     [ 1.  5.  2. ...,  5.  0.  3.]  //  [1 5 2 ..., 5 0 3]   //  [1 5 2 ..., 5 0 3]
Average accuracy kNNAlgorithm 0.992  SKlearn Knn 0.992 
Fold accuracy result comparison for k=7, distance = euclidean and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.994          0.994       6.279   0.068     [ 3.  2.  9. ...,  9.  1.  7.]  //  [3 2 9 ..., 9 1 7]   //  [3 2 9 ..., 9 1 7]
0.990          0.990       6.515   0.066     [ 3.  7.  8. ...,  1.  1.  6.]  //  [3 7 8 ..., 1 1 6]   //  [3 7 8 ..., 1 1 6]
0.992          0.992       6.564   0.068     [ 8.  8.  7. ...,  7.  9.  3.]  //  [8 8 7 ..., 7 9 3]   //  [8 8 7 ..., 7 9 3]
0.989          0.989       6.419   0.068     [ 3.  3.  2. ...,  5.  9.  2.]  //  [3 3 2 ..., 5 9 2]   //  [3 3 2 ..., 5 9 2]
0.992          0.992       6.640   0.071     [ 7.  3.  1. ...,  0.  7.  8.]  //  [7 3 1 ..., 0 7 8]   //  [7 3 1 ..., 0 7 8]
0.993          0.993       6.484   0.069     [ 4.  2.  9. ...,  9.  8.  0.]  //  [4 2 9 ..., 9 8 0]   //  [4 2 9 ..., 9 8 0]
0.993          0.993       6.969   0.071     [ 6.  3.  0. ...,  6.  8.  3.]  //  [6 3 0 ..., 6 8 3]   //  [6 3 0 ..., 6 8 3]
0.995          0.995       7.540   0.079     [ 9.  7.  6. ...,  2.  8.  9.]  //  [9 7 6 ..., 2 8 9]   //  [9 7 6 ..., 2 8 9]
0.994          0.994       7.345   0.071     [ 5.  5.  8. ...,  5.  2.  3.]  //  [5 5 8 ..., 5 2 3]   //  [5 5 8 ..., 5 2 3]
0.990          0.989       6.993   0.070     [ 1.  5.  2. ...,  5.  0.  3.]  //  [1 5 2 ..., 5 0 3]   //  [1 5 2 ..., 5 0 3]
Average accuracy kNNAlgorithm 0.992  SKlearn Knn 0.992 
Avarage accuracies for k 1,3,5,7: distance = euclidean and method = vote
k    1       3       5       7
   0.993  0.993   0.992   0.992
cosine
Fold accuracy result comparison for k=1, distance = cosine and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.992          0.991       5.666   0.117     [ 3.  2.  9. ...,  9.  1.  7.]  //  [3 2 9 ..., 9 1 7]   //  [3 2 9 ..., 9 1 7]
0.994          0.994       5.820   0.108     [ 3.  7.  8. ...,  1.  1.  6.]  //  [3 7 8 ..., 1 1 6]   //  [3 7 8 ..., 1 1 6]
0.995          0.995       5.726   0.102     [ 8.  8.  7. ...,  7.  9.  3.]  //  [8 8 7 ..., 7 9 3]   //  [8 8 7 ..., 7 9 3]
0.993          0.994       5.794   0.105     [ 3.  3.  2. ...,  5.  9.  2.]  //  [3 3 2 ..., 5 9 2]   //  [3 3 2 ..., 5 9 2]
0.996          0.995       6.238   0.104     [ 7.  3.  1. ...,  0.  7.  8.]  //  [7 3 1 ..., 0 7 8]   //  [7 3 1 ..., 0 7 8]
0.992          0.991       5.840   0.100     [ 4.  2.  9. ...,  9.  8.  0.]  //  [4 2 9 ..., 9 8 0]   //  [4 2 9 ..., 9 8 0]
0.995          0.997       5.717   0.115     [ 6.  3.  0. ...,  6.  8.  3.]  //  [6 3 0 ..., 6 8 3]   //  [6 3 0 ..., 6 8 3]
0.990          0.991       5.699   0.098     [ 9.  7.  6. ...,  2.  8.  9.]  //  [9 7 6 ..., 2 8 9]   //  [9 7 6 ..., 2 8 9]
0.995          0.995       6.028   0.100     [ 5.  5.  8. ...,  5.  2.  3.]  //  [5 5 8 ..., 5 2 3]   //  [5 5 8 ..., 5 2 3]
0.995          0.995       5.793   0.101     [ 1.  5.  2. ...,  5.  0.  3.]  //  [1 5 2 ..., 5 0 3]   //  [1 5 2 ..., 5 0 3]
Average accuracy kNNAlgorithm 0.994  SKlearn Knn 0.994 
Fold accuracy result comparison for k=3, distance = cosine and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.994          0.995       6.029   0.130     [ 3.  2.  9. ...,  9.  1.  7.]  //  [3 2 9 ..., 9 1 7]   //  [3 2 9 ..., 9 1 7]
0.990          0.992       5.812   0.130     [ 3.  7.  8. ...,  1.  1.  6.]  //  [3 7 8 ..., 1 1 6]   //  [3 7 8 ..., 1 1 6]
0.995          0.994       5.848   0.123     [ 8.  8.  7. ...,  7.  9.  3.]  //  [8 8 7 ..., 7 9 3]   //  [8 8 7 ..., 7 9 3]
0.991          0.991       6.283   0.130     [ 3.  3.  2. ...,  5.  9.  2.]  //  [3 3 2 ..., 5 9 2]   //  [3 3 2 ..., 5 9 2]
0.994          0.994       6.363   0.138     [ 7.  3.  1. ...,  0.  7.  8.]  //  [7 3 1 ..., 0 7 8]   //  [7 3 1 ..., 0 7 8]
0.995          0.995       6.401   0.145     [ 4.  2.  9. ...,  9.  8.  0.]  //  [4 2 9 ..., 9 8 0]   //  [4 2 9 ..., 9 8 0]
0.995          0.995       6.185   0.131     [ 6.  3.  0. ...,  6.  8.  3.]  //  [6 3 0 ..., 6 8 3]   //  [6 3 0 ..., 6 8 3]
0.994          0.994       6.063   0.128     [ 9.  7.  6. ...,  2.  8.  9.]  //  [9 7 6 ..., 2 8 9]   //  [9 7 6 ..., 2 8 9]
0.996          0.995       6.308   0.127     [ 5.  5.  8. ...,  5.  2.  3.]  //  [5 5 8 ..., 5 2 3]   //  [5 5 8 ..., 5 2 3]
0.993          0.994       6.199   0.133     [ 1.  5.  2. ...,  5.  0.  3.]  //  [1 5 2 ..., 5 0 3]   //  [1 5 2 ..., 5 0 3]
Average accuracy kNNAlgorithm 0.994  SKlearn Knn 0.994 
Fold accuracy result comparison for k=5, distance = cosine and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.994          0.995       6.265   0.203     [ 3.  2.  9. ...,  9.  1.  7.]  //  [3 2 9 ..., 9 1 7]   //  [3 2 9 ..., 9 1 7]
0.990          0.990       5.981   0.200     [ 3.  7.  8. ...,  1.  1.  6.]  //  [3 7 8 ..., 1 1 6]   //  [3 7 8 ..., 1 1 6]
0.994          0.992       6.227   0.180     [ 8.  8.  7. ...,  7.  9.  3.]  //  [8 8 7 ..., 7 9 3]   //  [8 8 7 ..., 7 9 3]
0.990          0.991       5.744   0.189     [ 3.  3.  2. ...,  5.  9.  2.]  //  [3 3 2 ..., 5 9 2]   //  [3 3 2 ..., 5 9 2]
0.993          0.992       5.827   0.184     [ 7.  3.  1. ...,  0.  7.  8.]  //  [7 3 1 ..., 0 7 8]   //  [7 3 1 ..., 0 7 8]
0.996          0.995       5.664   0.182     [ 4.  2.  9. ...,  9.  8.  0.]  //  [4 2 9 ..., 9 8 0]   //  [4 2 9 ..., 9 8 0]
0.993          0.993       5.982   0.188     [ 6.  3.  0. ...,  6.  8.  3.]  //  [6 3 0 ..., 6 8 3]   //  [6 3 0 ..., 6 8 3]
0.994          0.993       5.922   0.191     [ 9.  7.  6. ...,  2.  8.  9.]  //  [9 7 6 ..., 2 8 9]   //  [9 7 6 ..., 2 8 9]
0.993          0.995       5.768   0.185     [ 5.  5.  8. ...,  5.  2.  3.]  //  [5 5 8 ..., 5 2 3]   //  [5 5 8 ..., 5 2 3]
0.990          0.991       5.844   0.185     [ 1.  5.  2. ...,  5.  0.  3.]  //  [1 5 2 ..., 5 0 3]   //  [1 5 2 ..., 5 0 3]
Average accuracy kNNAlgorithm 0.993  SKlearn Knn 0.993 
Fold accuracy result comparison for k=7, distance = cosine and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.995          0.995       5.727   0.182     [ 3.  2.  9. ...,  9.  1.  7.]  //  [3 2 9 ..., 9 1 7]   //  [3 2 9 ..., 9 1 7]
0.990          0.992       5.888   0.202     [ 3.  7.  8. ...,  1.  1.  6.]  //  [3 7 8 ..., 1 1 6]   //  [3 7 8 ..., 1 1 6]
0.992          0.991       5.754   0.179     [ 8.  8.  7. ...,  7.  9.  3.]  //  [8 8 7 ..., 7 9 3]   //  [8 8 7 ..., 7 9 3]
0.989          0.991       5.783   0.180     [ 3.  3.  2. ...,  5.  9.  2.]  //  [3 3 2 ..., 5 9 2]   //  [3 3 2 ..., 5 9 2]
0.992          0.992       5.738   0.186     [ 7.  3.  1. ...,  0.  7.  8.]  //  [7 3 1 ..., 0 7 8]   //  [7 3 1 ..., 0 7 8]
0.994          0.992       5.782   0.183     [ 4.  2.  9. ...,  9.  8.  0.]  //  [4 2 9 ..., 9 8 0]   //  [4 2 9 ..., 9 8 0]
0.994          0.993       6.174   0.208     [ 6.  3.  0. ...,  6.  8.  3.]  //  [6 3 0 ..., 6 8 3]   //  [6 3 0 ..., 6 8 3]
0.995          0.994       6.233   0.177     [ 9.  7.  6. ...,  2.  8.  9.]  //  [9 7 6 ..., 2 8 9]   //  [9 7 6 ..., 2 8 9]
0.992          0.995       6.044   0.194     [ 5.  5.  8. ...,  5.  2.  3.]  //  [5 5 8 ..., 5 2 3]   //  [5 5 8 ..., 5 2 3]
0.989          0.990       5.717   0.191     [ 1.  5.  2. ...,  5.  0.  3.]  //  [1 5 2 ..., 5 0 3]   //  [1 5 2 ..., 5 0 3]
Average accuracy kNNAlgorithm 0.992  SKlearn Knn 0.992 
Avarage accuracies for k 1,3,5,7: distance = cosine and method = vote
k    1       3       5       7
   0.994  0.994   0.993   0.992
hamming
Fold accuracy result comparison for k=1, distance = hamming and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.862          0.851       1.348   0.224     [ 3.  1.  9. ...,  9.  1.  7.]  //  [3 2 3 ..., 9 1 7]   //  [3 2 9 ..., 9 1 7]
0.872          0.843       1.369   0.340     [ 3.  1.  0. ...,  1.  1.  6.]  //  [3 1 0 ..., 1 1 6]   //  [3 7 8 ..., 1 1 6]
0.861          0.848       1.513   0.241     [ 0.  3.  7. ...,  7.  9.  2.]  //  [8 3 7 ..., 7 9 2]   //  [8 8 7 ..., 7 9 3]
0.848          0.825       1.347   0.239     [ 3.  3.  2. ...,  5.  9.  2.]  //  [3 3 2 ..., 5 9 2]   //  [3 3 2 ..., 5 9 2]
0.847          0.824       1.347   0.237     [ 7.  7.  1. ...,  0.  7.  6.]  //  [7 1 1 ..., 0 7 6]   //  [7 3 1 ..., 0 7 8]
0.845          0.814       1.322   0.226     [ 4.  2.  3. ...,  9.  8.  0.]  //  [4 2 3 ..., 9 8 0]   //  [4 2 9 ..., 9 8 0]
0.856          0.826       1.319   0.231     [ 6.  3.  0. ...,  6.  8.  3.]  //  [6 3 0 ..., 6 8 3]   //  [6 3 0 ..., 6 8 3]
0.867          0.853       1.360   0.242     [ 9.  7.  6. ...,  2.  8.  9.]  //  [3 7 6 ..., 2 8 9]   //  [9 7 6 ..., 2 8 9]
0.868          0.842       1.311   0.219     [ 5.  5.  8. ...,  3.  2.  3.]  //  [5 5 8 ..., 3 2 3]   //  [5 5 8 ..., 5 2 3]
0.857          0.838       1.386   0.241     [ 1.  5.  2. ...,  5.  0.  3.]  //  [1 5 2 ..., 5 0 3]   //  [1 5 2 ..., 5 0 3]
Average accuracy kNNAlgorithm 0.858  SKlearn Knn 0.836 
Fold accuracy result comparison for k=3, distance = hamming and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.887          0.849       1.313   0.220     [ 3.  1.  9. ...,  9.  1.  7.]  //  [3 2 3 ..., 9 1 7]   //  [3 2 9 ..., 9 1 7]
0.884          0.856       1.331   0.221     [ 3.  1.  8. ...,  1.  1.  6.]  //  [3 1 8 ..., 1 1 6]   //  [3 7 8 ..., 1 1 6]
0.883          0.851       1.367   0.235     [ 0.  9.  7. ...,  7.  3.  3.]  //  [0 8 7 ..., 7 3 3]   //  [8 8 7 ..., 7 9 3]
0.857          0.824       1.335   0.237     [ 3.  3.  2. ...,  9.  9.  2.]  //  [3 3 1 ..., 3 9 2]   //  [3 3 2 ..., 5 9 2]
0.864          0.822       1.339   0.240     [ 7.  7.  1. ...,  0.  7.  6.]  //  [7 1 1 ..., 0 7 8]   //  [7 3 1 ..., 0 7 8]
0.853          0.833       1.323   0.221     [ 4.  2.  3. ...,  9.  8.  0.]  //  [4 2 3 ..., 9 2 0]   //  [4 2 9 ..., 9 8 0]
0.882          0.828       1.296   0.222     [ 6.  3.  0. ...,  6.  8.  3.]  //  [6 3 0 ..., 6 8 3]   //  [6 3 0 ..., 6 8 3]
0.877          0.845       1.327   0.231     [ 9.  7.  6. ...,  2.  8.  9.]  //  [9 7 6 ..., 2 8 9]   //  [9 7 6 ..., 2 8 9]
0.893          0.863       1.351   0.227     [ 5.  5.  8. ...,  3.  2.  3.]  //  [5 5 7 ..., 3 2 3]   //  [5 5 8 ..., 5 2 3]
0.882          0.849       1.348   0.230     [ 1.  5.  2. ...,  5.  0.  3.]  //  [1 5 2 ..., 5 0 3]   //  [1 5 2 ..., 5 0 3]
Average accuracy kNNAlgorithm 0.876  SKlearn Knn 0.842 
Fold accuracy result comparison for k=5, distance = hamming and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.901          0.852       1.420   0.224     [ 3.  1.  9. ...,  9.  1.  7.]  //  [3 2 9 ..., 9 1 7]   //  [3 2 9 ..., 9 1 7]
0.901          0.863       1.292   0.230     [ 3.  1.  8. ...,  1.  1.  6.]  //  [3 1 8 ..., 1 1 6]   //  [3 7 8 ..., 1 1 6]
0.889          0.859       1.289   0.226     [ 0.  8.  7. ...,  7.  9.  3.]  //  [8 3 7 ..., 7 3 3]   //  [8 8 7 ..., 7 9 3]
0.871          0.835       1.315   0.223     [ 3.  3.  2. ...,  3.  9.  2.]  //  [3 3 2 ..., 3 9 2]   //  [3 3 2 ..., 5 9 2]
0.865          0.832       1.346   0.230     [ 7.  7.  1. ...,  0.  7.  6.]  //  [7 1 1 ..., 0 7 8]   //  [7 3 1 ..., 0 7 8]
0.872          0.841       1.326   0.231     [ 4.  2.  3. ...,  9.  8.  0.]  //  [4 2 3 ..., 9 2 0]   //  [4 2 9 ..., 9 8 0]
0.884          0.834       1.353   0.224     [ 6.  3.  0. ...,  6.  8.  3.]  //  [6 3 0 ..., 6 8 3]   //  [6 3 0 ..., 6 8 3]
0.878          0.858       1.340   0.240     [ 9.  7.  6. ...,  2.  8.  9.]  //  [9 7 6 ..., 2 8 9]   //  [9 7 6 ..., 2 8 9]
0.904          0.871       1.472   0.291     [ 5.  5.  7. ...,  3.  2.  3.]  //  [5 5 7 ..., 3 2 3]   //  [5 5 8 ..., 5 2 3]
0.897          0.858       1.524   0.232     [ 1.  5.  2. ...,  5.  0.  3.]  //  [1 5 2 ..., 5 0 3]   //  [1 5 2 ..., 5 0 3]
Average accuracy kNNAlgorithm 0.886  SKlearn Knn 0.850 
Fold accuracy result comparison for k=7, distance = hamming and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.906          0.858       1.542   0.298     [ 3.  1.  3. ...,  9.  1.  7.]  //  [3 2 3 ..., 9 1 7]   //  [3 2 9 ..., 9 1 7]
0.898          0.858       1.408   0.280     [ 3.  1.  8. ...,  1.  1.  6.]  //  [3 1 8 ..., 2 1 6]   //  [3 7 8 ..., 1 1 6]
0.896          0.856       1.522   0.296     [ 8.  8.  7. ...,  7.  9.  3.]  //  [8 8 7 ..., 7 9 3]   //  [8 8 7 ..., 7 9 3]
0.880          0.843       1.516   0.287     [ 3.  3.  2. ...,  3.  9.  2.]  //  [3 3 2 ..., 3 9 2]   //  [3 3 2 ..., 5 9 2]
0.869          0.840       1.489   0.263     [ 7.  7.  1. ...,  0.  7.  6.]  //  [7 7 1 ..., 0 7 8]   //  [7 3 1 ..., 0 7 8]
0.873          0.842       1.466   0.289     [ 4.  2.  3. ...,  9.  8.  0.]  //  [4 2 3 ..., 9 2 0]   //  [4 2 9 ..., 9 8 0]
0.883          0.848       1.341   0.238     [ 6.  3.  0. ...,  6.  8.  3.]  //  [6 3 0 ..., 6 8 3]   //  [6 3 0 ..., 6 8 3]
0.890          0.864       1.439   0.233     [ 9.  7.  6. ...,  2.  8.  9.]  //  [3 7 6 ..., 2 8 9]   //  [9 7 6 ..., 2 8 9]
0.903          0.878       1.348   0.240     [ 5.  5.  8. ...,  3.  2.  3.]  //  [5 5 8 ..., 3 2 3]   //  [5 5 8 ..., 5 2 3]
0.903          0.859       1.377   0.252     [ 1.  5.  2. ...,  5.  0.  3.]  //  [1 5 2 ..., 5 0 3]   //  [1 5 2 ..., 5 0 3]
Average accuracy kNNAlgorithm 0.890  SKlearn Knn 0.855 
Avarage accuracies for k 1,3,5,7: distance = hamming and method = vote
k    1       3       5       7
   0.858  0.876   0.886   0.890
minkowski
Fold accuracy result comparison for k=1, distance = minkowski and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.104          0.991       4.854   0.209     [ 2.  2.  2. ...,  2.  2.  2.]  //  [3 2 9 ..., 9 1 7]   //  [3 2 9 ..., 9 1 7]
0.104          0.991       4.958   0.181     [ 2.  2.  2. ...,  2.  2.  2.]  //  [3 7 8 ..., 1 1 6]   //  [3 7 8 ..., 1 1 6]
0.105          0.995       5.097   0.157     [ 2.  2.  2. ...,  2.  2.  2.]  //  [8 8 7 ..., 7 9 3]   //  [8 8 7 ..., 7 9 3]
0.105          0.991       5.155   0.184     [ 2.  2.  2. ...,  2.  2.  2.]  //  [3 3 2 ..., 5 9 2]   //  [3 3 2 ..., 5 9 2]
0.104          0.995       4.876   0.162     [ 2.  2.  2. ...,  2.  2.  2.]  //  [7 3 1 ..., 0 7 8]   //  [7 3 1 ..., 0 7 8]
0.104          0.988       4.791   0.193     [ 2.  2.  2. ...,  2.  2.  2.]  //  [4 2 9 ..., 9 8 0]   //  [4 2 9 ..., 9 8 0]
0.103          0.995       4.986   0.192     [ 2.  2.  2. ...,  2.  2.  2.]  //  [6 3 0 ..., 6 8 3]   //  [6 3 0 ..., 6 8 3]
0.104          0.992       4.940   0.175     [ 2.  2.  2. ...,  2.  2.  2.]  //  [9 7 6 ..., 2 8 9]   //  [9 7 6 ..., 2 8 9]
0.105          0.995       5.029   0.179     [ 2.  2.  2. ...,  2.  2.  2.]  //  [5 5 8 ..., 5 2 3]   //  [5 5 8 ..., 5 2 3]
0.104          0.994       4.890   0.191     [ 2.  2.  2. ...,  2.  2.  2.]  //  [1 5 2 ..., 5 0 3]   //  [1 5 2 ..., 5 0 3]
Average accuracy kNNAlgorithm 0.104  SKlearn Knn 0.993 
Fold accuracy result comparison for k=3, distance = minkowski and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.104          0.995       5.489   0.312     [ 2.  2.  2. ...,  2.  2.  2.]  //  [3 2 9 ..., 9 1 7]   //  [3 2 9 ..., 9 1 7]
0.104          0.991       5.201   0.234     [ 2.  2.  2. ...,  2.  2.  2.]  //  [3 7 8 ..., 1 1 6]   //  [3 7 8 ..., 1 1 6]
0.105          0.994       5.076   0.241     [ 2.  2.  2. ...,  2.  2.  2.]  //  [8 8 7 ..., 7 9 3]   //  [8 8 7 ..., 7 9 3]
0.105          0.988       4.866   0.257     [ 2.  2.  2. ...,  2.  2.  2.]  //  [3 3 2 ..., 5 9 2]   //  [3 3 2 ..., 5 9 2]
0.104          0.991       5.083   0.243     [ 2.  2.  2. ...,  2.  2.  2.]  //  [7 3 1 ..., 0 7 8]   //  [7 3 1 ..., 0 7 8]
0.104          0.995       4.998   0.245     [ 2.  2.  2. ...,  2.  2.  2.]  //  [4 2 9 ..., 9 8 0]   //  [4 2 9 ..., 9 8 0]
0.103          0.994       5.068   0.245     [ 2.  2.  2. ...,  2.  2.  2.]  //  [6 3 0 ..., 6 8 3]   //  [6 3 0 ..., 6 8 3]
0.104          0.993       5.103   0.254     [ 2.  2.  2. ...,  2.  2.  2.]  //  [9 7 6 ..., 2 8 9]   //  [9 7 6 ..., 2 8 9]
0.105          0.995       5.096   0.241     [ 2.  2.  2. ...,  2.  2.  2.]  //  [5 5 8 ..., 5 2 3]   //  [5 5 8 ..., 5 2 3]
0.104          0.992       4.862   0.230     [ 2.  2.  2. ...,  2.  2.  2.]  //  [1 5 2 ..., 5 0 3]   //  [1 5 2 ..., 5 0 3]
Average accuracy kNNAlgorithm 0.104  SKlearn Knn 0.993 
Fold accuracy result comparison for k=5, distance = minkowski and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.104          0.994       4.804   0.280     [ 2.  2.  2. ...,  2.  2.  2.]  //  [3 2 9 ..., 9 1 7]   //  [3 2 9 ..., 9 1 7]
0.104          0.990       4.890   0.358     [ 2.  2.  2. ...,  2.  2.  2.]  //  [3 7 8 ..., 1 1 6]   //  [3 7 8 ..., 1 1 6]
0.105          0.992       4.998   0.271     [ 2.  2.  2. ...,  2.  2.  2.]  //  [8 8 7 ..., 7 9 3]   //  [8 8 7 ..., 7 9 3]
0.105          0.989       4.932   0.291     [ 2.  2.  2. ...,  2.  2.  2.]  //  [3 3 2 ..., 5 9 2]   //  [3 3 2 ..., 5 9 2]
0.105          0.990       4.689   0.275     [ 1.  1.  1. ...,  1.  1.  1.]  //  [7 3 1 ..., 0 7 8]   //  [7 3 1 ..., 0 7 8]
0.104          0.995       5.061   0.290     [ 2.  2.  2. ...,  2.  2.  2.]  //  [4 2 9 ..., 9 8 0]   //  [4 2 9 ..., 9 8 0]
0.103          0.995       4.993   0.285     [ 2.  2.  2. ...,  2.  2.  2.]  //  [6 3 0 ..., 6 8 3]   //  [6 3 0 ..., 6 8 3]
0.104          0.994       5.506   0.363     [ 1.  1.  1. ...,  1.  1.  1.]  //  [9 7 6 ..., 2 8 9]   //  [9 7 6 ..., 2 8 9]
0.105          0.995       5.331   0.265     [ 2.  2.  2. ...,  2.  2.  2.]  //  [5 5 8 ..., 5 2 3]   //  [5 5 8 ..., 5 2 3]
0.115          0.989       4.962   0.269     [ 2.  2.  1. ...,  1.  1.  1.]  //  [1 5 2 ..., 5 0 3]   //  [1 5 2 ..., 5 0 3]
Average accuracy kNNAlgorithm 0.105  SKlearn Knn 0.992 
Fold accuracy result comparison for k=7, distance = minkowski and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.104          0.995       4.845   0.310     [ 1.  1.  1. ...,  1.  1.  1.]  //  [3 2 9 ..., 9 1 7]   //  [3 2 9 ..., 9 1 7]
0.104          0.990       5.569   0.318     [ 1.  1.  1. ...,  1.  1.  1.]  //  [3 7 8 ..., 1 1 6]   //  [3 7 8 ..., 1 1 6]
0.105          0.989       5.411   0.306     [ 1.  1.  1. ...,  1.  1.  1.]  //  [8 8 7 ..., 7 9 3]   //  [8 8 7 ..., 7 9 3]
0.104          0.988       5.099   0.322     [ 1.  1.  1. ...,  1.  1.  1.]  //  [3 3 2 ..., 5 9 2]   //  [3 3 2 ..., 5 9 2]
0.105          0.988       4.944   0.313     [ 1.  1.  1. ...,  1.  1.  1.]  //  [7 3 1 ..., 0 7 8]   //  [7 3 1 ..., 0 7 8]
0.104          0.992       5.036   0.298     [ 1.  1.  1. ...,  1.  1.  1.]  //  [4 2 9 ..., 9 8 0]   //  [4 2 9 ..., 9 8 0]
0.104          0.993       4.985   0.305     [ 1.  1.  1. ...,  1.  1.  1.]  //  [6 3 0 ..., 6 8 3]   //  [6 3 0 ..., 6 8 3]
0.104          0.994       4.950   0.332     [ 1.  1.  1. ...,  1.  1.  1.]  //  [9 7 6 ..., 2 8 9]   //  [9 7 6 ..., 2 8 9]
0.104          0.992       4.858   0.291     [ 1.  1.  1. ...,  1.  1.  1.]  //  [5 5 8 ..., 5 2 3]   //  [5 5 8 ..., 5 2 3]
0.103          0.987       4.931   0.323     [ 1.  1.  1. ...,  1.  1.  1.]  //  [1 5 2 ..., 5 0 3]   //  [1 5 2 ..., 5 0 3]
Average accuracy kNNAlgorithm 0.104  SKlearn Knn 0.991 
Avarage accuracies for k 1,3,5,7: distance = minkowski and method = vote
k    1       3       5       7
   0.104  0.104   0.105   0.104
correlation
Fold accuracy result comparison for k=1, distance = correlation and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.992          0.992       587.176   0.191     [ 3.  2.  9. ...,  9.  1.  7.]  //  [3 2 9 ..., 9 1 7]   //  [3 2 9 ..., 9 1 7]
0.993          0.993       585.878   0.182     [ 3.  7.  8. ...,  1.  1.  6.]  //  [3 7 8 ..., 1 1 6]   //  [3 7 8 ..., 1 1 6]
0.996          0.996       574.589   0.240     [ 8.  8.  7. ...,  7.  9.  3.]  //  [8 8 7 ..., 7 9 3]   //  [8 8 7 ..., 7 9 3]
0.994          0.994       631.294   0.243     [ 3.  3.  2. ...,  5.  9.  2.]  //  [3 3 2 ..., 5 9 2]   //  [3 3 2 ..., 5 9 2]
0.995          0.995       575.874   0.190     [ 7.  3.  1. ...,  0.  7.  8.]  //  [7 3 1 ..., 0 7 8]   //  [7 3 1 ..., 0 7 8]
0.992          0.992       603.408   0.221     [ 4.  2.  9. ...,  9.  8.  0.]  //  [4 2 9 ..., 9 8 0]   //  [4 2 9 ..., 9 8 0]
0.996          0.996       592.672   0.224     [ 6.  3.  0. ...,  6.  8.  3.]  //  [6 3 0 ..., 6 8 3]   //  [6 3 0 ..., 6 8 3]
0.991          0.991       583.613   0.200     [ 9.  7.  6. ...,  2.  8.  9.]  //  [9 7 6 ..., 2 8 9]   //  [9 7 6 ..., 2 8 9]
0.996          0.996       574.627   0.169     [ 5.  5.  8. ...,  5.  2.  3.]  //  [5 5 8 ..., 5 2 3]   //  [5 5 8 ..., 5 2 3]
0.995          0.995       622.455   0.195     [ 1.  5.  2. ...,  5.  0.  3.]  //  [1 5 2 ..., 5 0 3]   //  [1 5 2 ..., 5 0 3]
Average accuracy kNNAlgorithm 0.994  SKlearn Knn 0.994 
Fold accuracy result comparison for k=3, distance = correlation and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.995          0.995       579.405   0.239     [ 3.  2.  9. ...,  9.  1.  7.]  //  [3 2 9 ..., 9 1 7]   //  [3 2 9 ..., 9 1 7]
0.991          0.992       586.260   0.231     [ 3.  7.  8. ...,  1.  1.  6.]  //  [3 7 8 ..., 1 1 6]   //  [3 7 8 ..., 1 1 6]
0.994          0.994       797.193   0.196     [ 8.  8.  7. ...,  7.  9.  3.]  //  [8 8 7 ..., 7 9 3]   //  [8 8 7 ..., 7 9 3]
0.994          0.994       563.745   0.211     [ 3.  3.  2. ...,  5.  9.  2.]  //  [3 3 2 ..., 5 9 2]   //  [3 3 2 ..., 5 9 2]
0.994          0.994       590.936   0.224     [ 7.  3.  1. ...,  0.  7.  8.]  //  [7 3 1 ..., 0 7 8]   //  [7 3 1 ..., 0 7 8]
0.995          0.995       591.673   0.259     [ 4.  2.  9. ...,  9.  8.  0.]  //  [4 2 9 ..., 9 8 0]   //  [4 2 9 ..., 9 8 0]
0.995          0.995       1878.144   0.205     [ 6.  3.  0. ...,  6.  8.  3.]  //  [6 3 0 ..., 6 8 3]   //  [6 3 0 ..., 6 8 3]
0.994          0.994       581.159   0.238     [ 9.  7.  6. ...,  2.  8.  9.]  //  [9 7 6 ..., 2 8 9]   //  [9 7 6 ..., 2 8 9]
0.995          0.995       572.204   0.208     [ 5.  5.  8. ...,  5.  2.  3.]  //  [5 5 8 ..., 5 2 3]   //  [5 5 8 ..., 5 2 3]
0.993          0.992       560.306   0.206     [ 1.  5.  2. ...,  5.  0.  3.]  //  [1 5 2 ..., 5 0 3]   //  [1 5 2 ..., 5 0 3]
Average accuracy kNNAlgorithm 0.994  SKlearn Knn 0.994 
Fold accuracy result comparison for k=5, distance = correlation and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.994          0.994       571.259   0.319     [ 3.  2.  9. ...,  9.  1.  7.]  //  [3 2 9 ..., 9 1 7]   //  [3 2 9 ..., 9 1 7]
0.991          0.991       572.158   0.280     [ 3.  7.  8. ...,  1.  1.  6.]  //  [3 7 8 ..., 1 1 6]   //  [3 7 8 ..., 1 1 6]
0.992          0.993       523.510   0.263     [ 8.  8.  7. ...,  7.  9.  3.]  //  [8 8 7 ..., 7 9 3]   //  [8 8 7 ..., 7 9 3]
0.992          0.992       554.352   0.272     [ 3.  3.  2. ...,  5.  9.  2.]  //  [3 3 2 ..., 5 9 2]   //  [3 3 2 ..., 5 9 2]
0.992          0.992       555.025   0.305     [ 7.  3.  1. ...,  0.  7.  8.]  //  [7 3 1 ..., 0 7 8]   //  [7 3 1 ..., 0 7 8]
0.995          0.995       611.335   0.293     [ 4.  2.  9. ...,  9.  8.  0.]  //  [4 2 9 ..., 9 8 0]   //  [4 2 9 ..., 9 8 0]
0.994          0.994       570.501   0.263     [ 6.  3.  0. ...,  6.  8.  3.]  //  [6 3 0 ..., 6 8 3]   //  [6 3 0 ..., 6 8 3]
0.995          0.994       508.598   0.245     [ 9.  7.  6. ...,  2.  8.  9.]  //  [9 7 6 ..., 2 8 9]   //  [9 7 6 ..., 2 8 9]
0.995          0.995       1211.462   0.327     [ 5.  5.  8. ...,  5.  2.  3.]  //  [5 5 8 ..., 5 2 3]   //  [5 5 8 ..., 5 2 3]
0.992          0.992       552.529   0.282     [ 1.  5.  2. ...,  5.  0.  3.]  //  [1 5 2 ..., 5 0 3]   //  [1 5 2 ..., 5 0 3]
Average accuracy kNNAlgorithm 0.993  SKlearn Knn 0.993 
Fold accuracy result comparison for k=7, distance = correlation and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.995          0.995       737.627   0.266     [ 3.  2.  9. ...,  9.  1.  7.]  //  [3 2 9 ..., 9 1 7]   //  [3 2 9 ..., 9 1 7]
0.991          0.991       41902.595   0.296     [ 3.  7.  8. ...,  1.  1.  6.]  //  [3 7 8 ..., 1 1 6]   //  [3 7 8 ..., 1 1 6]
0.990          0.990       662.567   0.263     [ 8.  8.  7. ...,  7.  9.  3.]  //  [8 8 7 ..., 7 9 3]   //  [8 8 7 ..., 7 9 3]
0.992          0.991       569.346   0.298     [ 3.  3.  2. ...,  5.  9.  2.]  //  [3 3 2 ..., 5 9 2]   //  [3 3 2 ..., 5 9 2]
0.992          0.992       559.679   0.259     [ 7.  3.  1. ...,  0.  7.  8.]  //  [7 3 1 ..., 0 7 8]   //  [7 3 1 ..., 0 7 8]
0.992          0.992       562.767   0.271     [ 4.  2.  9. ...,  9.  8.  0.]  //  [4 2 9 ..., 9 8 0]   //  [4 2 9 ..., 9 8 0]
0.994          0.994       582.889   0.257     [ 6.  3.  0. ...,  6.  8.  3.]  //  [6 3 0 ..., 6 8 3]   //  [6 3 0 ..., 6 8 3]
0.993          0.993       671.016   0.428     [ 9.  7.  6. ...,  2.  8.  9.]  //  [9 7 6 ..., 2 8 9]   //  [9 7 6 ..., 2 8 9]
0.995          0.995       1012.380   0.268     [ 5.  5.  8. ...,  5.  2.  3.]  //  [5 5 8 ..., 5 2 3]   //  [5 5 8 ..., 5 2 3]
0.989          0.989       570.187   0.304     [ 1.  5.  2. ...,  5.  0.  3.]  //  [1 5 2 ..., 5 0 3]   //  [1 5 2 ..., 5 0 3]
Average accuracy kNNAlgorithm 0.992  SKlearn Knn 0.992 
Avarage accuracies for k 1,3,5,7: distance = correlation and method = vote
k    1       3       5       7
   0.994  0.994   0.993   0.992
Avarage accuracies for k 1,3,5,7: and method = vote
k      1         3         5         7
euclidean   0.993  0.993   0.992   0.992
cosine   0.994  0.994   0.993   0.992
hamming   0.858  0.876   0.886   0.890
minkowski   0.104  0.104   0.105   0.104
correlation   0.994  0.994   0.993   0.992


done
