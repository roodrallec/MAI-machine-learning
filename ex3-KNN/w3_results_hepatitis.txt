/Library/Frameworks/Python.framework/Versions/2.7/bin/python2.7 "/Users/georgina/Documents/GitHub/MAI-machine-learning/ex3-KNN/work3 IML Knn.py"
STARTTING
euclidean
Fold accuracy result comparison for k=1, distance = euclidean and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.714          0.714       0.013   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  0.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 0 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.533          0.533       0.014   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 0 1 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.643          0.643       0.012   0.001     [ 1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.]  //  [1 1 1 0 1 1 1 1 1 1 1 0 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.647          0.647       0.014   0.001     [ 1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.]  //  [1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.625          0.625       0.013   0.001     [ 1.  1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.  0.  1.  0.  1.]  //  [1 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.588          0.588       0.015   0.001     [ 1.  1.  1.  0.  0.  1.  0.  1.  0.  1.  0.  0.  1.  1.  0.  0.  1.]  //  [1 1 1 0 0 1 0 1 0 1 0 0 1 1 0 0 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.733          0.733       0.013   0.001     [ 0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [0 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.733          0.733       0.013   0.001     [ 1.  0.  1.  1.  1.  0.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 1 1 1 0 1 0 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.750          0.750       0.014   0.001     [ 1.  0.  0.  1.  0.  1.  1.  1.  1.  0.  1.  1.  0.  1.  1.  1.]  //  [1 0 0 1 0 1 1 1 1 0 1 1 0 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.625          0.625       0.013   0.001     [ 0.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.]  //  [0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.659  SKlearn Knn 0.659 
Fold accuracy result comparison for k=3, distance = euclidean and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.011   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.667          0.667       0.013   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  0.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 0 1 1 1 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.714          0.714       0.011   0.001     [ 1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 0 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.765          0.765       0.014   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.688          0.688       0.012   0.001     [ 1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.]  //  [1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.765          0.765       0.013   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  0.  1.  1.  0.  1.  1.]  //  [1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.800       0.012   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.733          0.733       0.012   0.001     [ 0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [0 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.875          0.875       0.012   0.001     [ 1.  0.  0.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.750          0.750       0.012   0.001     [ 0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.754  SKlearn Knn 0.754 
Fold accuracy result comparison for k=5, distance = euclidean and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.010   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.667          0.667       0.013   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  0.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 0 1 1 1 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.714          0.714       0.012   0.001     [ 1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.765          0.765       0.015   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.625          0.625       0.013   0.001     [ 1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  0.  1.  0.  1.  1.  1.]  //  [1 1 1 0 1 1 1 1 1 1 0 1 0 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.765          0.765       0.014   0.001     [ 1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.800       0.012   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.667          0.667       0.013   0.001     [ 0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [0 1 1 1 0 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.750          0.750       0.013   0.001     [ 1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.750          0.750       0.014   0.001     [ 0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.729  SKlearn Knn 0.729 
Fold accuracy result comparison for k=7, distance = euclidean and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.013   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.600          0.600       0.013   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.714          0.714       0.012   0.001     [ 1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.765          0.765       0.014   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.750          0.750       0.014   0.001     [ 1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.824          0.824       0.014   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.800       0.013   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.600          0.600       0.013   0.001     [ 0.  1.  0.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [0 1 0 1 0 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.750          0.750       0.013   0.001     [ 1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.750          0.750       0.012   0.001     [ 0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.734  SKlearn Knn 0.734 
Avarage accuracies for k 1,3,5,7: distance = euclidean and method = vote
k    1       3       5       7
   0.659  0.754   0.729   0.734
cosine
Fold accuracy result comparison for k=1, distance = cosine and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.072   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.667          0.667       0.074   0.001     [ 1.  1.  0.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  0.]  //  [1 1 0 1 1 0 1 1 1 1 1 1 1 1 0]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.571          0.571       0.067   0.001     [ 1.  1.  1.  0.  1.  0.  1.  0.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 0 1 0 1 0 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.588          0.588       0.087   0.001     [ 1.  1.  1.  1.  1.  0.  1.  1.  1.  0.  1.  1.  0.  1.  1.  1.  1.]  //  [1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.625          0.625       0.090   0.001     [ 1.  1.  1.  0.  1.  1.  1.  0.  1.  0.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 0 1 1 1 0 1 0 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.765          0.765       0.091   0.001     [ 0.  1.  1.  1.  1.  0.  0.  1.  0.  1.  1.  1.  1.  1.  1.  0.  1.]  //  [0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.800       0.077   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.667          0.667       0.074   0.001     [ 1.  0.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.562          0.562       0.078   0.001     [ 0.  0.  1.  1.  0.  1.  1.  1.  0.  0.  1.  1.  0.  1.  1.  1.]  //  [0 0 1 1 0 1 1 1 0 0 1 1 0 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.812          0.812       0.079   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.684  SKlearn Knn 0.684 
Fold accuracy result comparison for k=3, distance = cosine and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.071   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.667          0.667       0.076   0.001     [ 1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.786          0.786       0.072   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.647          0.647       0.087   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  0.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.625          0.625       0.085   0.001     [ 1.  1.  1.  0.  0.  1.  1.  0.  1.  0.  1.  1.  1.  0.  1.  1.]  //  [1 1 1 0 0 1 1 0 1 0 1 1 1 0 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.824          0.824       0.083   0.001     [ 1.  1.  1.  1.  1.  0.  1.  0.  0.  1.  1.  1.  1.  1.  1.  0.  1.]  //  [1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 0 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.800       0.071   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.733          0.733       0.073   0.001     [ 1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.688          0.688       0.082   0.001     [ 1.  0.  1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  0.  1.  1.  1.]  //  [1 0 1 1 0 1 1 1 0 1 1 1 0 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.812          0.812       0.078   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.737  SKlearn Knn 0.737 
Fold accuracy result comparison for k=5, distance = cosine and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.714          0.714       0.074   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.600          0.600       0.079   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.714          0.714       0.075   0.001     [ 1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 0 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.706          0.706       0.086   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.750          0.750       0.078   0.001     [ 1.  1.  0.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.765          0.765       0.082   0.001     [ 1.  1.  1.  1.  1.  1.  1.  0.  0.  1.  1.  0.  1.  1.  0.  0.  1.]  //  [1 1 1 1 1 1 1 0 0 1 1 0 1 1 0 0 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.800       0.074   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.667          0.667       0.078   0.001     [ 1.  1.  0.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 0 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.688          0.688       0.079   0.001     [ 1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.]  //  [1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.812          0.812       0.082   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.722  SKlearn Knn 0.722 
Fold accuracy result comparison for k=7, distance = cosine and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.068   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.600          0.600       0.075   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.786          0.786       0.070   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.706          0.706       0.087   0.001     [ 1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.750          0.750       0.080   0.001     [ 1.  1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 0 0 1 1 0 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.882          0.882       0.084   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  0.  1.  1.  1.  0.  1.]  //  [1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 0 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.800       0.077   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.733          0.733       0.077   0.001     [ 0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [0 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.688          0.688       0.081   0.001     [ 1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.]  //  [1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.812          0.812       0.082   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.754  SKlearn Knn 0.754 
Avarage accuracies for k 1,3,5,7: distance = cosine and method = vote
k    1       3       5       7
   0.684  0.737   0.722   0.754
hamming
Fold accuracy result comparison for k=1, distance = hamming and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.030   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.733          0.800       0.035   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  0.  1.]  //  [1 1 1 1 1 1 1 1 0 1 1 0 1 0 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.786          0.786       0.031   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.765          0.706       0.037   0.001     [ 1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  0.]  //  [1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 0]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.812          0.812       0.033   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.824          0.882       0.041   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.867          0.933       0.033   0.001     [ 1.  1.  0.  0.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.]  //  [1 0 0 0 1 1 1 1 0 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.800          0.800       0.035   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.750          0.750       0.033   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.]  //  [1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.812          0.812       0.035   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.793  SKlearn Knn 0.807 
Fold accuracy result comparison for k=3, distance = hamming and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.031   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.867          0.867       0.033   0.001     [ 0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.]  //  [0 1 1 1 1 1 1 1 1 1 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.786          0.786       0.032   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.765          0.765       0.039   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.812          0.812       0.037   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.824          0.824       0.039   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.867          0.867       0.035   0.001     [ 1.  0.  0.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 0 0 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.800          0.800       0.034   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.688          0.812       0.034   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  0.]  //  [1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.812          0.812       0.035   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.801  SKlearn Knn 0.813 
Fold accuracy result comparison for k=5, distance = hamming and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.030   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.800          0.867       0.032   0.001     [ 0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [0 1 1 1 1 1 1 1 1 1 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.786          0.786       0.032   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.765          0.706       0.040   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.812          0.812       0.037   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.765          0.824       0.036   0.001     [ 1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.867          0.867       0.036   0.001     [ 1.  0.  0.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 0 0 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.800          0.800       0.034   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.812          0.812       0.039   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.812          0.812       0.038   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.801  SKlearn Knn 0.807 
Fold accuracy result comparison for k=7, distance = hamming and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.032   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.800          0.800       0.032   0.001     [ 0.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.]  //  [0 1 1 0 1 1 1 1 1 1 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.786          0.786       0.033   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.765          0.765       0.039   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.812          0.812       0.037   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.824          0.824       0.040   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.933          0.867       0.037   0.001     [ 1.  0.  0.  0.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.]  //  [1 0 0 0 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.800          0.800       0.033   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.750          0.812       0.035   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.812          0.812       0.035   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.807  SKlearn Knn 0.806 
Avarage accuracies for k 1,3,5,7: distance = hamming and method = vote
k    1       3       5       7
   0.793  0.801   0.801   0.807
minkowski
Fold accuracy result comparison for k=1, distance = minkowski and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.643          0.643       0.049   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  0.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 0 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.467          0.467       0.050   0.001     [ 1.  1.  0.  1.  1.  0.  0.  1.  1.  1.  0.  1.  1.  1.  1.]  //  [1 1 0 1 1 0 0 1 1 1 0 1 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.643          0.643       0.050   0.001     [ 1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.]  //  [1 1 1 0 1 1 1 1 1 1 1 0 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.647          0.647       0.064   0.001     [ 1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.]  //  [1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.625          0.625       0.055   0.001     [ 1.  1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.  0.  1.  0.  1.]  //  [1 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.588          0.588       0.059   0.001     [ 1.  1.  1.  0.  0.  1.  0.  1.  0.  1.  0.  0.  1.  1.  0.  0.  1.]  //  [1 1 1 0 0 1 0 1 0 1 0 0 1 1 0 0 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.733          0.733       0.053   0.001     [ 0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [0 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.733          0.733       0.052   0.001     [ 1.  0.  0.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 0 1 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.750          0.750       0.055   0.001     [ 1.  0.  0.  1.  0.  1.  1.  1.  1.  0.  1.  1.  0.  1.  1.  1.]  //  [1 0 0 1 0 1 1 1 1 0 1 1 0 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.625          0.625       0.053   0.001     [ 0.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.]  //  [0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.645  SKlearn Knn 0.645 
Fold accuracy result comparison for k=3, distance = minkowski and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.857          0.857       0.055   0.001     [ 1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.667          0.667       0.052   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  0.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 0 1 1 1 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.714          0.714       0.048   0.001     [ 1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 0 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.706          0.706       0.056   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.750          0.750       0.057   0.001     [ 1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.765          0.765       0.059   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  0.  1.  1.  0.  1.  1.]  //  [1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.800       0.051   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.733          0.733       0.053   0.001     [ 0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [0 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.812          0.812       0.058   0.001     [ 1.  0.  0.  1.  0.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.]  //  [1 0 0 1 0 1 1 1 1 1 1 1 0 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.750          0.750       0.064   0.001     [ 0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.755  SKlearn Knn 0.755 
Fold accuracy result comparison for k=5, distance = minkowski and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.060   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.667          0.667       0.073   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  0.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 0 1 1 1 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.714          0.714       0.056   0.001     [ 1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.765          0.765       0.061   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.688          0.688       0.053   0.001     [ 1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.]  //  [1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.765          0.765       0.059   0.001     [ 1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.800       0.058   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.667          0.667       0.057   0.001     [ 0.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [0 1 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.625          0.625       0.061   0.001     [ 0.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.]  //  [0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.750          0.750       0.058   0.001     [ 0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.723  SKlearn Knn 0.723 
Fold accuracy result comparison for k=7, distance = minkowski and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.051   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.600          0.600       0.054   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.714          0.714       0.052   0.001     [ 1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.765          0.765       0.059   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.750          0.750       0.056   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.824          0.824       0.067   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.800       0.062   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.600          0.600       0.058   0.001     [ 0.  1.  0.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [0 1 0 1 0 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.750          0.750       0.057   0.001     [ 1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.750          0.750       0.057   0.001     [ 0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.734  SKlearn Knn 0.734 
Avarage accuracies for k 1,3,5,7: distance = minkowski and method = vote
k    1       3       5       7
   0.645  0.755   0.723   0.734
correlation
Fold accuracy result comparison for k=1, distance = correlation and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.108   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.667          0.667       0.125   0.001     [ 1.  1.  0.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  0.]  //  [1 1 0 1 1 0 1 1 1 1 1 1 1 1 0]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.643          0.643       0.109   0.001     [ 1.  1.  1.  0.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 0 1 0 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.588          0.588       0.130   0.001     [ 1.  1.  1.  1.  1.  0.  1.  1.  1.  0.  1.  1.  0.  1.  1.  1.  1.]  //  [1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.688          0.688       0.117   0.001     [ 1.  1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.765          0.765       0.128   0.001     [ 0.  1.  1.  1.  1.  0.  0.  1.  0.  1.  1.  1.  1.  1.  1.  0.  1.]  //  [0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.800       0.114   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.667          0.667       0.125   0.001     [ 1.  0.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.562          0.562       0.126   0.001     [ 0.  0.  1.  1.  0.  1.  1.  1.  0.  0.  1.  1.  0.  1.  1.  1.]  //  [0 0 1 1 0 1 1 1 0 0 1 1 0 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.812          0.812       0.120   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.698  SKlearn Knn 0.698 
Fold accuracy result comparison for k=3, distance = correlation and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.113   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.667          0.667       0.118   0.001     [ 1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.786          0.786       0.104   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.647          0.647       0.123   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  0.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.625          0.625       0.130   0.001     [ 1.  1.  1.  0.  0.  1.  1.  0.  1.  0.  1.  1.  1.  0.  1.  1.]  //  [1 1 1 0 0 1 1 0 1 0 1 1 1 0 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.765          0.765       0.140   0.001     [ 0.  1.  1.  1.  1.  0.  1.  0.  0.  1.  1.  1.  1.  1.  1.  0.  1.]  //  [0 1 1 1 1 0 1 0 0 1 1 1 1 1 1 0 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.800       0.119   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.800          0.800       0.112   0.001     [ 1.  1.  0.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.688          0.688       0.124   0.001     [ 1.  0.  1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  0.  1.  1.  1.]  //  [1 0 1 1 0 1 1 1 0 1 1 1 0 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.812          0.812       0.120   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.737  SKlearn Knn 0.737 
Fold accuracy result comparison for k=5, distance = correlation and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.714          0.714       0.107   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.600          0.600       0.125   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.786          0.786       0.108   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.706          0.706       0.123   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.750          0.750       0.117   0.001     [ 1.  1.  0.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.765          0.765       0.127   0.001     [ 1.  1.  1.  1.  1.  1.  1.  0.  0.  1.  1.  0.  1.  1.  0.  0.  1.]  //  [1 1 1 1 1 1 1 0 0 1 1 0 1 1 0 0 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.800       0.110   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.667          0.667       0.110   0.001     [ 1.  1.  0.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 0 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.688          0.688       0.118   0.001     [ 1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.]  //  [1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.812          0.812       0.112   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.729  SKlearn Knn 0.729 
Fold accuracy result comparison for k=7, distance = correlation and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.100   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.600          0.600       0.107   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.786          0.786       0.107   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.765          0.765       0.121   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.750          0.750       0.114   0.001     [ 1.  1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 0 0 1 1 0 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.882          0.882       0.118   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  0.  1.  1.  1.  0.  1.]  //  [1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 0 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.800       0.113   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.733          0.733       0.113   0.001     [ 0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [0 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.688          0.688       0.129   0.001     [ 1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.]  //  [1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.812          0.812       0.131   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.760  SKlearn Knn 0.760 
Avarage accuracies for k 1,3,5,7: distance = correlation and method = vote
k    1       3       5       7
   0.698  0.737   0.729   0.760
Avarage accuracies for k 1,3,5,7: and method = vote
k      1         3         5         7
euclidean   0.659  0.754   0.729   0.734
cosine   0.684  0.737   0.722   0.754
hamming   0.793  0.801   0.801   0.807
minkowski   0.645  0.755   0.723   0.734
correlation   0.698  0.737   0.729   0.760

