STARTTING
euclidean
Fold accuracy result comparison for k=1, distance = euclidean and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.857          0.857       0.002   0.001     [ 1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 0 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.800          0.800       0.002   0.001     [ 0.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.]  //  [0 0 1 1 1 1 1 1 1 1 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.714          0.714       0.002   0.001     [ 1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 0 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.706          0.706       0.003   0.001     [ 1.  1.  1.  1.  0.  1.  0.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.875          0.875       0.002   0.001     [ 1.  1.  1.  0.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.765          0.765       0.003   0.001     [ 1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.667          0.667       0.002   0.001     [ 1.  0.  1.  0.  1.  1.  1.  1.  1.  0.  0.  1.  1.  1.  1.]  //  [1 0 1 0 1 1 1 1 1 0 0 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.667          0.667       0.002   0.001     [ 1.  0.  1.  1.  1.  0.  0.  1.  1.  1.  1.  1.  1.  0.  1.]  //  [1 0 1 1 1 0 0 1 1 1 1 1 1 0 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.812          0.812       0.002   0.001     [ 1.  1.  0.  1.  0.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  0.]  //  [1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 0]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.875          0.875       0.003   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.774  SKlearn Knn 0.774 
Fold accuracy result comparison for k=3, distance = euclidean and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.002   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.733          0.733       0.002   0.001     [ 1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.]  //  [1 0 1 1 1 1 1 1 1 1 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.786          0.786       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.706          0.706       0.003   0.001     [ 1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.938          0.938       0.003   0.001     [ 1.  1.  0.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.765          0.765       0.003   0.001     [ 1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.933          0.933       0.002   0.001     [ 1.  0.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.800          0.800       0.003   0.001     [ 1.  1.  1.  1.  1.  0.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 0 0 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.938          0.938       0.003   0.001     [ 1.  1.  0.  1.  0.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  0.]  //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 0]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.875          0.875       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.826  SKlearn Knn 0.826 
Fold accuracy result comparison for k=5, distance = euclidean and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.004   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.800          0.800       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.786          0.786       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.647          0.647       0.003   0.001     [ 1.  0.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.938          0.938       0.002   0.001     [ 1.  1.  1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.706          0.706       0.003   0.001     [ 1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.800       0.003   0.001     [ 1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.]  //  [1 0 1 1 1 1 1 1 1 1 0 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.867          0.867       0.003   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.875          0.875       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.875          0.875       0.003   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.808  SKlearn Knn 0.808 
Fold accuracy result comparison for k=7, distance = euclidean and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.002   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.867          0.867       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  0.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 0 1 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.786          0.786       0.003   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.647          0.647       0.003   0.001     [ 1.  0.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.938          0.938       0.002   0.001     [ 1.  1.  1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.824          0.824       0.003   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.933          0.933       0.002   0.001     [ 1.  0.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.867          0.867       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.875          0.875       0.003   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.875          0.875       0.003   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.840  SKlearn Knn 0.840 
Avarage accuracies for k 1,3,5,7: distance = euclidean and method = vote
k    1       3       5       7
   0.774  0.826   0.808   0.840
cosine
Fold accuracy result comparison for k=1, distance = cosine and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.857          0.786       0.002   0.001     [ 1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.800          0.800       0.002   0.001     [ 0.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.]  //  [0 0 1 1 1 1 1 1 1 1 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.643          0.643       0.002   0.001     [ 1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  0.  1.  1.]  //  [1 1 1 1 1 0 1 1 1 1 1 0 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.647          0.706       0.003   0.001     [ 1.  0.  1.  1.  0.  1.  1.  0.  1.  1.  1.  1.  1.  0.  1.  1.  1.]  //  [1 1 1 1 0 1 1 0 1 1 1 1 1 0 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.875          0.875       0.003   0.001     [ 1.  0.  1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.824          0.824       0.003   0.001     [ 1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.]  //  [1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.600       0.002   0.001     [ 1.  1.  0.  0.  1.  1.  1.  1.  0.  0.  1.  1.  1.  1.  1.]  //  [1 1 1 0 1 1 1 1 1 0 0 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.733          0.600       0.002   0.001     [ 1.  0.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  0.  1.]  //  [1 0 1 1 0 0 0 1 1 1 1 1 1 0 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.812          0.875       0.003   0.001     [ 1.  1.  0.  1.  0.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  0.]  //  [1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 0]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.875          0.875       0.003   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.787  SKlearn Knn 0.758 
Fold accuracy result comparison for k=3, distance = cosine and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.857          0.786       0.002   0.001     [ 1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.800          0.800       0.002   0.001     [ 0.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.]  //  [0 0 1 1 1 1 1 1 1 1 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.786          0.786       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.706          0.706       0.003   0.001     [ 1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
1.000          1.000       0.002   0.001     [ 1.  1.  0.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.765          0.765       0.003   0.001     [ 1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.867          0.867       0.002   0.001     [ 1.  0.  0.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.]  //  [1 0 0 1 1 1 1 1 1 0 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.733          0.733       0.002   0.001     [ 1.  0.  1.  1.  1.  0.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 1 1 1 0 0 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.938          0.938       0.002   0.001     [ 1.  1.  0.  1.  0.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  0.]  //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 0]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.875          0.938       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.833  SKlearn Knn 0.832 
Fold accuracy result comparison for k=5, distance = cosine and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.002   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.733          0.733       0.002   0.001     [ 1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.]  //  [1 0 1 1 1 1 1 1 1 1 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.714          0.786       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.647          0.647       0.002   0.001     [ 1.  0.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
1.000          0.938       0.002   0.001     [ 1.  1.  0.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.706          0.706       0.004   0.001     [ 1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.800       0.003   0.001     [ 1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.]  //  [1 0 1 1 1 1 1 1 1 1 0 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.867          0.867       0.003   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.938          0.938       0.003   0.001     [ 1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.875          0.938       0.003   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.807  SKlearn Knn 0.814 
Fold accuracy result comparison for k=7, distance = cosine and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.002   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.867          0.800       0.003   0.001     [ 0.  0.  1.  1.  1.  1.  1.  1.  0.  1.  1.  0.  1.  1.  1.]  //  [1 0 1 1 1 1 1 1 0 1 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.786          0.786       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.706          0.706       0.003   0.001     [ 1.  0.  1.  1.  0.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
1.000          1.000       0.003   0.001     [ 1.  1.  0.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.706          0.706       0.003   0.001     [ 1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.933          0.933       0.002   0.001     [ 1.  0.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.867          0.867       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.938          0.938       0.002   0.001     [ 1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.875          0.938       0.003   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.846  SKlearn Knn 0.846 
Avarage accuracies for k 1,3,5,7: distance = cosine and method = vote
k    1       3       5       7
   0.787  0.833   0.807   0.846
hamming
Fold accuracy result comparison for k=1, distance = hamming and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.714          0.714       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.867          0.733       0.001   0.001     [ 0.  0.  1.  1.  1.  1.  1.  1.  0.  1.  1.  0.  1.  1.  1.]  //  [0 0 1 1 1 1 1 1 1 0 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.643          0.643       0.001   0.001     [ 1.  1.  1.  1.  1.  0.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 0 0 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.706          0.765       0.002   0.001     [ 1.  0.  1.  1.  0.  1.  0.  1.  1.  1.  1.  1.  1.  0.  0.  1.  1.]  //  [1 1 1 1 0 1 0 0 1 1 1 1 1 0 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.875          0.875       0.001   0.001     [ 0.  1.  0.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.706          0.765       0.001   0.001     [ 1.  1.  0.  1.  1.  0.  1.  1.  1.  1.  1.  0.  1.  1.  1.  0.  1.]  //  [1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.867          0.933       0.001   0.001     [ 1.  0.  0.  0.  1.  1.  1.  1.  0.  1.  0.  1.  1.  1.  1.]  //  [1 0 0 0 1 1 1 1 0 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.733          0.733       0.001   0.001     [ 1.  0.  1.  1.  1.  1.  0.  1.  1.  1.  1.  0.  1.  1.  1.]  //  [1 0 1 1 1 1 0 1 1 1 1 1 1 0 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.812          0.812       0.001   0.001     [ 1.  1.  0.  1.  0.  1.  1.  1.  0.  0.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 0]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.875          0.875       0.001   0.001     [ 1.  1.  1.  0.  1.  1.  0.  1.  1.  0.  0.  0.  1.  1.  1.  1.]  //  [1 1 1 0 1 1 0 1 1 0 0 0 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.780  SKlearn Knn 0.785 
Fold accuracy result comparison for k=3, distance = hamming and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.714          0.786       0.001   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.867          0.933       0.001   0.001     [ 0.  0.  1.  1.  1.  1.  1.  1.  0.  1.  1.  0.  1.  1.  1.]  //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.714          0.714       0.001   0.001     [ 1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 0 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.647          0.647       0.002   0.001     [ 0.  0.  1.  1.  0.  1.  1.  0.  1.  1.  1.  1.  1.  0.  1.  1.  0.]  //  [1 0 1 1 0 1 1 0 1 1 1 1 1 0 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
1.000          0.938       0.001   0.001     [ 1.  1.  0.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.765          0.765       0.001   0.001     [ 1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  0.  1.  1.  1.  0.  1.]  //  [1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.867          0.867       0.002   0.001     [ 1.  0.  0.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 0 0 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.867          0.800       0.001   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 0 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.812          0.812       0.001   0.001     [ 1.  1.  0.  1.  0.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  0.]  //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 0]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.938          0.812       0.001   0.001     [ 1.  1.  1.  0.  1.  1.  0.  1.  1.  0.  1.  0.  1.  1.  1.  1.]  //  [1 1 1 0 1 1 0 1 1 1 0 0 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.819  SKlearn Knn 0.807 
Fold accuracy result comparison for k=5, distance = hamming and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.857          0.714       0.002   0.001     [ 1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.933          0.933       0.001   0.001     [ 0.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  0.  1.  1.  1.]  //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.786          0.786       0.001   0.001     [ 1.  1.  0.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 0 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.706          0.706       0.001   0.001     [ 0.  0.  1.  1.  0.  1.  0.  0.  1.  1.  1.  1.  1.  0.  1.  1.  0.]  //  [1 0 1 1 0 1 1 1 1 1 1 1 1 0 0 1 0]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
1.000          1.000       0.001   0.001     [ 1.  1.  0.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.765          0.765       0.002   0.001     [ 1.  1.  1.  1.  1.  0.  0.  1.  0.  1.  1.  0.  1.  1.  1.  0.  1.]  //  [1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.867       0.001   0.001     [ 1.  1.  0.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 0 0 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.800          0.800       0.001   0.001     [ 1.  0.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 0 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.812          0.812       0.002   0.001     [ 1.  1.  0.  1.  0.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  0.]  //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 0]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.875          0.812       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  0.  0.  1.  1.  1.  1.  1.]  //  [1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.833  SKlearn Knn 0.820 
Fold accuracy result comparison for k=7, distance = hamming and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.857          0.857       0.001   0.001     [ 1.  1.  0.  0.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 0 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.867          0.933       0.001   0.001     [ 0.  0.  1.  1.  1.  1.  1.  1.  0.  1.  1.  0.  1.  1.  1.]  //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.786          0.786       0.001   0.001     [ 1.  1.  0.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 0 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.647          0.647       0.001   0.001     [ 0.  0.  1.  1.  0.  1.  1.  0.  1.  1.  1.  1.  1.  0.  1.  1.  0.]  //  [1 0 1 1 0 1 1 0 1 1 1 1 1 0 0 1 0]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
1.000          1.000       0.001   0.001     [ 1.  1.  0.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.765          0.882       0.002   0.001     [ 1.  1.  1.  1.  1.  0.  0.  1.  0.  1.  1.  0.  1.  1.  1.  0.  1.]  //  [1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.867       0.001   0.001     [ 1.  1.  0.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 0 0 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.733          0.800       0.001   0.001     [ 1.  0.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  0.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 0 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.750          0.750       0.001   0.001     [ 1.  1.  1.  1.  0.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  0.]  //  [1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
1.000          0.875       0.001   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  0.  1.  0.  1.  1.  1.  1.]  //  [1 1 1 0 1 1 0 1 1 1 1 0 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.820  SKlearn Knn 0.840 
Avarage accuracies for k 1,3,5,7: distance = hamming and method = vote
k    1       3       5       7
   0.780  0.819   0.833   0.820
minkowski
Fold accuracy result comparison for k=1, distance = minkowski and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.857       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 0 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.733          0.800       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [0 0 1 1 1 1 1 1 1 1 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.786          0.643       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 0 1 1 1 1 1 0 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.765          0.647       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.812          0.812       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.824          0.765       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.733       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 1 1 1 1 1 1 1 0 0 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.800          0.800       0.002   0.002     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 0 0 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.812          0.875       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.812          0.875       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.793  SKlearn Knn 0.781 
Fold accuracy result comparison for k=3, distance = minkowski and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.857       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.733          0.733       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 1 1 1 1 1 1 1 1 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.786          0.786       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.765          0.706       0.002   0.002     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.812          0.875       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.824          0.824       0.003   0.002     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.800       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 1 1 1 1 1 1 1 0 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.800          0.800       0.003   0.002     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.812          0.938       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.812          0.875       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.793  SKlearn Knn 0.819 
Fold accuracy result comparison for k=5, distance = minkowski and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.733          0.800       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.786          0.786       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.765          0.765       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.812          0.875       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.824          0.824       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.733       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 1 1 1 1 1 1 1 0 0 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.800          0.800       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.812          0.812       0.002   0.002     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.812          0.875       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.793  SKlearn Knn 0.806 
Fold accuracy result comparison for k=7, distance = minkowski and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.002   0.002     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.733          0.800       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.786          0.786       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.765          0.765       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.812          0.812       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.824          0.824       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.800          0.800       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 0 0 1 1 1 1 1 1 0 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.800          0.800       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.812          0.812       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.812          0.875       0.002   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.793  SKlearn Knn 0.806 
Avarage accuracies for k 1,3,5,7: distance = minkowski and method = vote
k    1       3       5       7
   0.793  0.793   0.793   0.793
correlation
Fold accuracy result comparison for k=1, distance = correlation and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.105   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.733          0.733       0.110   0.001     [ 1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.]  //  [1 0 1 1 1 1 1 1 1 1 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.643          0.643       0.100   0.001     [ 1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  0.  1.  1.]  //  [1 1 1 1 1 0 1 1 1 1 1 0 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.706          0.706       0.124   0.001     [ 1.  1.  1.  1.  0.  1.  1.  0.  1.  1.  1.  1.  1.  0.  1.  1.  1.]  //  [1 1 1 1 0 1 1 0 1 1 1 1 1 0 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
0.875          0.875       0.128   0.001     [ 1.  0.  1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.824          0.824       0.149   0.001     [ 1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.]  //  [1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.667          0.667       0.122   0.001     [ 1.  0.  1.  0.  1.  1.  1.  1.  1.  0.  0.  1.  1.  1.  1.]  //  [1 0 1 0 1 1 1 1 1 0 0 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.600          0.600       0.110   0.001     [ 1.  0.  1.  1.  0.  0.  0.  1.  1.  1.  1.  1.  1.  0.  1.]  //  [1 0 1 1 0 0 0 1 1 1 1 1 1 0 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.812          0.812       0.116   0.001     [ 1.  1.  0.  1.  0.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  0.]  //  [1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 0]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.875          0.875       0.116   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.752  SKlearn Knn 0.752 
Fold accuracy result comparison for k=3, distance = correlation and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.107   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.800          0.800       0.109   0.001     [ 0.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.]  //  [0 0 1 1 1 1 1 1 1 1 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.786          0.786       0.105   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.706          0.706       0.118   0.001     [ 1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
1.000          1.000       0.116   0.001     [ 1.  1.  0.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.765          0.765       0.123   0.001     [ 1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.867          0.867       0.107   0.001     [ 1.  0.  0.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.]  //  [1 0 0 1 1 1 1 1 1 0 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.733          0.733       0.114   0.001     [ 1.  0.  1.  1.  1.  0.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 1 1 1 0 0 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.938          0.938       0.119   0.001     [ 1.  1.  0.  1.  0.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  0.]  //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 0]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.938          0.938       0.110   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  0.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.832  SKlearn Knn 0.832 
Fold accuracy result comparison for k=5, distance = correlation and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.104   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.800          0.800       0.113   0.001     [ 1.  0.  1.  1.  1.  1.  1.  1.  0.  1.  1.  0.  1.  1.  1.]  //  [1 0 1 1 1 1 1 1 0 1 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.714          0.714       0.105   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.765          0.765       0.127   0.001     [ 1.  1.  1.  1.  0.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
1.000          1.000       0.125   0.001     [ 1.  1.  0.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.706          0.706       0.120   0.001     [ 1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.933          0.933       0.113   0.001     [ 1.  0.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.867          0.867       0.114   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.938          0.938       0.120   0.001     [ 1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.875          0.875       0.121   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.838  SKlearn Knn 0.838 
Fold accuracy result comparison for k=7, distance = correlation and method = vote
Prediction KNN IML   -   Prediction SKLearn   -- timeKNNIML -- timeSKlearn -- VECTOR KNN IML  // VECTOR KNN SKLEARN  //  TRUTH
0.786          0.786       0.103   0.001     [ 1.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 0 1 1 1 0 1 1 1 1 1 1]
0.867          0.867       0.105   0.001     [ 0.  0.  1.  1.  1.  1.  1.  1.  0.  1.  1.  0.  1.  1.  1.]  //  [0 0 1 1 1 1 1 1 0 1 1 0 1 1 1]   //  [0 1 1 1 1 1 1 1 0 1 1 0 1 1 0]
0.786          0.786       0.100   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 0 1 1 1 1]
0.647          0.647       0.121   0.001     [ 1.  0.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 0]
1.000          1.000       0.120   0.001     [ 1.  1.  0.  1.  0.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1]
0.765          0.765       0.123   0.001     [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1]   //  [1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1]
0.933          0.933       0.109   0.001     [ 1.  0.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 0 0 1 1 1 1 1 1 1 1 1 1 1 1]   //  [1 0 0 1 1 1 1 1 0 1 1 1 1 1 1]
0.867          0.867       0.106   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1]   //  [1 1 1 1 1 1 0 0 1 1 0 1 1 1 1]
0.938          0.938       0.115   0.001     [ 1.  1.  0.  1.  1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  1.]  //  [1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1]   //  [1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1]
0.938          0.938       0.115   0.001     [ 1.  1.  1.  1.  1.  1.  0.  1.  1.  1.  1.  0.  1.  1.  1.  1.]  //  [1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1]   //  [1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1]
Average accuracy kNNAlgorithm 0.852  SKlearn Knn 0.852 
Avarage accuracies for k 1,3,5,7: distance = correlation and method = vote
k    1       3       5       7
   0.752  0.832   0.838   0.852
Avarage accuracies for k 1,3,5,7: and method = vote
k      1         3         5         7
euclidean   0.774  0.826   0.808   0.840
cosine   0.787  0.833   0.807   0.846
hamming   0.780  0.819   0.833   0.820
minkowski   0.793  0.793   0.793   0.793
correlation   0.752  0.832   0.838   0.852


done
